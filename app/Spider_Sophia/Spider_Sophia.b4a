Build1=Default,b4a.example
File1=Cam.bal
File2=Connect.bal
File3=Tabhost.bal
File4=Tasks.bal
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
Group=Default Group
Library1=core
Library2=joystick
Library3=network
Library4=xui
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="21" android:targetSdkVersion="33"/>~\n~~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>~\n~)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~CreateResourceFromFile(Macro, Core.NetworkClearText)~\n~'End of default text.~\n~
Module1=Starter
NumberOfFiles=4
NumberOfLibraries=4
NumberOfModules=1
Version=12.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Spider_Sophia
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
	#AdditionalRes: ../Resources
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: False
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
	Private udps As UDPSocket
	Private udpp As UDPPacket
	Dim delayTimer, walkTimer As Timer
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	Dim ip, port As EditText
	Dim serverIp, serverPort As String
'	Dim left, right As Panel
	Dim click_enabled As Boolean
	Dim TabHost1 As TabHost
	
	Private js1 As JoyStick
	Dim radio, ang, pwr, x, y, z, thx, thy, thz As Float
	Dim task_state As Int
	Dim pckt As String
	
	Dim Active_Button, Mov_xz, Turn_phi, Mov_y, Turn_thpsi, walk As Button
	Dim Coords_info As Label
	
	Dim cd1, cd2 As ColorDrawable
	

	Dim WebView1 As WebView
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Tabhost
	Activity.LoadLayout("Tabhost")
	TabHost1.AddTab("Conn", "Connect")
	TabHost1.AddTab("Tasks", "Tasks")
	TabHost1.AddTab("Cam", "Cam")
	
	'Wifi config
	ip.Text="192.168.4.1"
	port.Text="3000"
	
	'Joystick´-
	js1.ButtonDrawable = "button"
	js1.PadBackground = "pad"
	
	'Button init
	cd1.Initialize(Colors.RGB(231, 102, 136), 10dip)
	cd2.Initialize(Colors.RGB(120, 184, 169), 10dip)
	Mov_xz.Background = cd1
	click_enabled = True
	task_state = 0 ' [0]: Mov(x/z), [1]: Turn(phi), [2]: Mov(y), [3]: Turn(th/psi), [4]: Walk
	Active_Button = Mov_xz

	Coords_info.Text = "Ang = 0" & CRLF & _
					   "Pwr = 0" & CRLF & _
					   "x   = 0" & CRLF & _
                       "y   = 0" & CRLF & _
                       "z   = 0" & CRLF & _
                       "th  = 0" & CRLF & _
                       "phi = 0" & CRLF & _
                       "psi = 0"
				   
	If FirstTime Then
		udps.Initialize("UdpSEvent", 0, 5000)
		delayTimer.Initialize("delayTimer", 12)
		walkTimer.Initialize("walkTimer", 100)
		walkTimer.Enabled = True
	End If

End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Private Sub Connect_Click
	serverIp = ip.Text
	serverPort = port.Text
	
	ToastMessageShow("Connected to IP = " & serverIp & ", Port = " & serverPort, True)
	TabHost1.CurrentTab = 1
End Sub

Sub js1_value_changed(Angle As Double, angleDegrees As Double, powr As Double)
	ang = Angle - cPI / 2
	If ang < (-cPI) Then ang = ang + 2*cPI
	pwr = powr
	joystick_action(ang, pwr)
	
	Coords_info.Text = "Ang = " & Round2(ang, 2) & CRLF & _
					   "Pwr = " & Round2(pwr, 2) & CRLF & _
					   "x   = " & Round2(x, 2) & CRLF & _
                       "y   = " & Round2(y, 2) & CRLF & _
                   	   "z   = " & Round2(z, 2) & CRLF & _
                       "th  = " & Round2(thx, 2) & CRLF & _
                       "phi = " & Round2(thy, 2) & CRLF & _
                       "psi = " & Round2(thz, 2)
	
	If click_enabled And task_state <> 4 Then
		delayTimer.Enabled = True
		click_enabled = False
		
		If task_state = 0 And (x <> 0 Or z <> 0) Then
			pckt = transfCoords(x, 0, z, 0, 0, 0)
		Else If task_state = 1 And thy <> 0 Then
			pckt = transfCoords(0, 0, 0, 0, thy, 0)
		Else If task_state = 2 And y <> 0 Then
			pckt = transfCoords(0, y+1, 0, 0, 0, 0)
		Else If task_state = 3 And (thx <> 0 Or thz <> 0) Then
			pckt = transfCoords(0, 0, 0, thx, 0, thz)
		End If
		
		Log(pckt)
		Send_Packet(pckt)
		
	End If
	
End Sub

Sub joystick_action(deg As Double, powr As Double)
	If task_state = 0 Then 'Mov(x/z)
		radio = powr / 100 * 4
	
		x = Min( Max(radio * Sin(deg), -4), 4 )
		z = Min( Max(radio * Cos(deg), -4), 4 )
		
	Else If task_state = 1 Then 'Turn(phi)
		Dim radlmt As Float= 20 * (cPI / 180)
		radio = powr / 100 * radlmt
		
		thy = Min( Max(radio * Sin (deg), -radlmt), radlmt )
		
	Else If task_state = 2 Then 'Mov(y)
		radio = powr / 100 * 4 '( 5 - (-3) ) / 2
		y = Min( Max(radio * Cos (deg), -4), 4 )
		
	Else If task_state = 3 Then 'Turn(th/psi)
		Dim radlmt As Float= 20 * (cPI / 180)
		radio = powr / 100 * radlmt
		
		thx = Min( Max(radio * Sin (deg), -radlmt), radlmt )
		thz = Min( Max(radio * Cos (deg), -radlmt), radlmt )
	End If

End Sub

Sub transfCoords(xi As Double, yi As Double, zi As Double, th As Double, phi As Double, psi As Double) As String
	Return "C" & Round2(xi, 2) & "," & Round2(yi, 2) & "," & Round2(zi, 2) & "," & Round2(th, 2) & "," & Round2(phi, 2) & "," & Round2(psi, 2)
End Sub

Sub Send_Packet(msg As String)
	serverIp = ip.Text
	serverPort = port.Text
	udpp.Initialize(msg.GetBytes("ASCII"), serverIp, serverPort)
	udps.Send(udpp)
End Sub

Sub delayTimer_Tick
	delayTimer.Enabled = False
	click_enabled = True
End Sub

Sub walkTimer_Tick
	If task_state = 4 And pwr <> 0 Then
		radio = Max( pwr / 100 * 1.2, 0.2)
		pckt = "W" & Round2(ang, 2) & "," & Round2(radio, 2)
		
		Log(pckt)
		Send_Packet(pckt)
	End If
End Sub

Private Sub Mov_xz_Click
	Active_Button.Background = cd2
	
	task_state = 0
	Log("Mov(x/z)")
	
	Mov_xz.Background = cd1
	Active_Button = Mov_xz
End Sub

Private Sub Turn_phi_Click
	Active_Button.Background = cd2
	
	task_state = 1
	Log("Turn(phi)")
	
	Turn_phi.Background = cd1
	Active_Button = Turn_phi
End Sub

Private Sub Mov_y_Click
	Active_Button.Background = cd2
	
	task_state = 2
	Log("Mov(y)")
	
	Mov_y.Background = cd1
	Active_Button = Mov_y
End Sub

Private Sub Turn_thpsi_Click
	Active_Button.Background = cd2
	
	task_state = 3
	Log("Turn(th/psi)")

	Turn_thpsi.Background = cd1
	Active_Button = Turn_thpsi
End Sub

Private Sub Walk_Click
	Active_Button.Background = cd2
	
	task_state = 4
	Log("Walk")

	walk.Background = cd1
	Active_Button = walk
End Sub

Private Sub TabHost1_TabChanged
	If TabHost1.CurrentTab = 2 Then
		WebView1.LoadUrl("http://192.168.3.107")
	End If
End Sub