Build1=Default,b4a.example
File1=Connect.bal
File2=JoystickCam.bal
File3=Tabhost.bal
File4=Tasks.bal
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
Group=Default Group
Library1=core
Library2=joystick
Library3=network
Library4=webviewextras
Library5=xui
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="21" android:targetSdkVersion="33"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~SetApplicationAttribute(android:usesCleartextTraffic, "true")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
Module1=|relative|..\JSControl
Module2=Starter
NumberOfFiles=4
NumberOfLibraries=5
NumberOfModules=2
Version=12.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Spider_Sophia
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: landscape
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: False
	#AdditionalRes: ../Resources
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
	Private udps As UDPSocket
	Private udpp As UDPPacket
	Dim delayTimer, walkTimer, responseTimer As Timer
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	Dim ip, port As EditText
	Dim serverIp, serverPort As String
'	Dim left, right As Panel
	Dim click_enabled, responseReceived, connected As Boolean
	Dim TabHost1 As TabHost
	
	Dim js1, walkJS, turnJS As JoyStick
	Dim js, walkControl As JSControl
	Dim pckt As String
	
	Dim connect, Disconnect, Active_Button, Mov_xz, Turn_phi, Mov_y, Turn_thpsi, walk As Button
	Dim Coords_info, IP_info As Label
	
	Dim cd1, cd2 As ColorDrawable
	Dim VideoCam As WebView
	Dim WebExtras As WebViewExtras
	Dim Spinner1 As Spinner
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Tabhost
	Activity.LoadLayout("Tabhost")
	TabHost1.AddTab("Conn", "Connect")
	TabHost1.AddTab("1 JS Control", "Tasks")
	TabHost1.AddTab("Video Control", "JoystickCam")
	
	'Initialize VideoCam
	WebExtras.addJavascriptInterface(VideoCam, "javascript")
	VideoCam.LoadUrl("http://192.168.3.107")
	
	
	'Wifi config
	ip.Text="192.168.4.1"
	port.Text="3000"
	serverIp = ""
	serverPort = ""
	
	Disconnect.Visible = False
	
	'Joystick
	js1.ButtonDrawable = "button"
	js1.PadBackground = "pad"
	walkJS.ButtonDrawable = "button"
	walkJS.PadBackground = "pad"
	turnJS.ButtonDrawable = "button"
	turnJS.PadBackground = "pad"
	
	js.Initialize(0)
	walkControl.Initialize(4)
	
	'Button init
	cd1.Initialize(Colors.RGB(231, 102, 136), 10dip)
	cd2.Initialize(Colors.RGB(120, 184, 169), 10dip)
	Mov_xz.Background = cd1
	click_enabled = True
	Active_Button = Mov_xz

	IP_info.Text = "Disconnected"
	Coords_info.Text = "Ang = 0" & CRLF & _
					   "Pwr = 0" & CRLF & _
					   "x   = 0" & CRLF & _
                       "y   = 0" & CRLF & _
                       "z   = 0" & CRLF & _
                       "th  = 0" & CRLF & _
                       "phi = 0" & CRLF & _
                       "psi = 0"
					   
	'Mode Selection Joystick2
	Spinner1.AddAll(Array As String("Turn", "Mov(x/z)", "Turn(phi)", "Up/Down", "Dance"))
				   
	If FirstTime Then
		udps.Initialize("UDP", 3000, 8192)
		delayTimer.Initialize("delayTimer", 12)
		walkTimer.Initialize("walkTimer", 25)
		walkTimer.Enabled = True
		responseTimer.Initialize("responseTimer", 5000)
	End If

End Sub

Sub Activity_Pause (UserClosed As Boolean)
	If connected Then
		Log("sent disconnect")
		DisconnectApp
	End If
End Sub

#Region Packet

Sub Send_Packet(msg As String)
	If serverIp <> "" And serverPort <> "" Then
		udpp.Initialize(msg.GetBytes("ASCII"), serverIp, serverPort)
		udps.Send(udpp)
	End If
End Sub

Sub delayTimer_Tick
	delayTimer.Enabled = False
	click_enabled = True
End Sub

Sub walkTimer_Tick
	If TabHost1.CurrentTab = 1 Then
		pckt = js.GetPckt()
		If pckt <> "" Then
			Log(pckt)
			Send_Packet(pckt)
		End If
	Else If TabHost1.CurrentTab = 2 Then
		pckt = walkControl.GetPckt()
		
		If pckt <> "" Then
			Log(pckt)
			Send_Packet(pckt)
		End If
	End If
End Sub

#End Region

#Region Buttons

Private Sub Mov_xz_Click
	Active_Button.Background = cd2
	
	js.SetMode(0)
	Log("Mov(x/z)")
	
	Mov_xz.Background = cd1
	Active_Button = Mov_xz
End Sub

Private Sub Turn_phi_Click
	Active_Button.Background = cd2
	
	js.SetMode(1)
	Log("Turn(phi)")
	
	Turn_phi.Background = cd1
	Active_Button = Turn_phi
End Sub

Private Sub Mov_y_Click
	Active_Button.Background = cd2
	
	js.SetMode(2)
	Log("Mov(y)")
	
	Mov_y.Background = cd1
	Active_Button = Mov_y
End Sub

Private Sub Turn_thpsi_Click
	Active_Button.Background = cd2
	
	js.SetMode(3)
	Log("Turn(th/psi)")

	Turn_thpsi.Background = cd1
	Active_Button = Turn_thpsi
End Sub

Private Sub Walk_Click
	Active_Button.Background = cd2
	
	js.SetMode(4)
	Log("Walk")

	walk.Background = cd1
	Active_Button = walk
End Sub

Private Sub Reset_Click
	Send_Packet("A0")
End Sub

#End Region

Private Sub TabHost1_TabChanged
	If TabHost1.CurrentTab = 2 Then 'Camera Page
		VideoCam.LoadUrl("http://192.168.3.107")
		WebExtras.executeJavascript(VideoCam, "document.body.style.transform = 'scale(0.65)';" & _
		 "document.body.style.transformOrigin = '0 0';")
	End If
End Sub

#Region Connection

Private Sub Connect_Click
	responseReceived = False
	udpp.Initialize("C".GetBytes("ASCII"), ip.Text, port.Text)
	udps.Send(udpp)
	connect.Enabled = False
	connect.Text = "Connecting..."
	responseTimer.Enabled = True
	
'	ToastMessageShow("Connected to IP = " & serverIp & ", Port = " & serverPort, True)
End Sub

Private Sub Disconnect_Click
	DisconnectApp
End Sub

Sub DisconnectApp
	udpp.Initialize("D".GetBytes("ASCII"), ip.Text, port.Text)
	udps.Send(udpp)
	ToastMessageShow("Disconnected", True)
	Disconnect.Visible = False
	IP_info.Text = "Disconnected"
	connect.Visible = True
	connect.Enabled = True
	connect.Text = "Connect"
	serverIp = ""
	serverPort = ""
	connected = False
End Sub

Sub UDP_PacketArrived (Packet As UDPPacket)
	Dim reply_packet As String = BytesToString(Packet.Data, 0, Packet.Length, "UTF8")
	responseReceived = True
	
	If reply_packet.StartsWith("A") Then
		serverIp = ip.Text
		serverPort = port.Text
		IP_info.Text = "Connected to: " & serverIp & ":" & serverPort
		
		TabHost1.CurrentTab = 1
		Disconnect.Visible = True
		connect.Visible = False
		connected = True
	Else If reply_packet.StartsWith("R") Then
		ToastMessageShow("Rejected connection to server", True)
	End If
End Sub

Sub responseTimer_Tick
	responseTimer.Enabled = False
	If responseReceived = False Then
		ToastMessageShow("No response from server. Please try again.", True)
		connect.Text = "Connect"
		connect.Enabled = True
	End If
End Sub

#End Region

#Region Joystick

Sub js1_value_changed(Angle As Double, angleDegrees As Double, powr As Double)
	js.Joystick_Action(Angle, powr)
	
	Coords_info.Text = js.GetInfo
	
	If click_enabled And js.GetMode <> 4 Then
		delayTimer.Enabled = True
		click_enabled = False
		
		pckt = js.GetPckt()
		
		If pckt <> "" Then
			Log(pckt)
			Send_Packet(pckt)
		End If
		
	End If
	
End Sub

Private Sub walkJS_value_changed(angle As Double, angleDegrees As Double, powr As Double)
	walkControl.SetMode(4)
	Spinner1.SelectedIndex = 0
	walkTimer.Enabled = True
	walkControl.Joystick_Action(angle, powr)
End Sub

Private Sub turnJS_value_changed(angle As Double, angleDegrees As Double, powr As Double)
	If walkControl.GetMode <> 4 Then
		walkTimer.Enabled = False
		walkControl.Joystick_Action(angle, powr)
	Else
		walkControl.SetAngleSpeed(angle, powr)
	End If
	
	If walkControl.GetMode <> 4 Or walkControl.powr = 0 Then
		If click_enabled Then
			delayTimer.Enabled = True
			click_enabled = False
			
			pckt = walkControl.GetPckt()
			
			If pckt <> "" Then
				Log(pckt)
				Send_Packet(pckt)
			End If
			
		End If
	End If
End Sub

#End Region

Private Sub Spinner1_ItemClick (Position As Int, Value As Object)
	Dim js_mode As Int = Position - 1
	If js_mode = -1 Then
		js_mode = 4
	End If
	walkControl.SetMode(js_mode)
End Sub